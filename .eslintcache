[{"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\App.js":"1","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Navbar.jsx":"2","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\index.js":"3","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\History.jsx":"4","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\Login.jsx":"5","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\Home.jsx":"6","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\SignUp.jsx":"7","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\utils\\DrawRect.js":"8","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\utils\\index.js":"9","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Webcam.jsx":"10","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\HabitModal.jsx":"11","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Checkbox.jsx":"12","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\StrictTimed.jsx":"13","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Timed.jsx":"14","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\contexts\\userContext.js":"15"},{"size":2593,"mtime":1612060757272,"results":"16","hashOfConfig":"17"},{"size":5466,"mtime":1612070963267,"results":"18","hashOfConfig":"17"},{"size":197,"mtime":1611972444157,"results":"19","hashOfConfig":"17"},{"size":6462,"mtime":1612070031644,"results":"20","hashOfConfig":"17"},{"size":3317,"mtime":1612060757274,"results":"21","hashOfConfig":"17"},{"size":3268,"mtime":1612072765816,"results":"22","hashOfConfig":"17"},{"size":3933,"mtime":1612049703129,"results":"23","hashOfConfig":"17"},{"size":534,"mtime":1611984310980,"results":"24","hashOfConfig":"17"},{"size":60,"mtime":1611984310981,"results":"25","hashOfConfig":"17"},{"size":2069,"mtime":1612061775448,"results":"26","hashOfConfig":"17"},{"size":7236,"mtime":1612061917016,"results":"27","hashOfConfig":"17"},{"size":1836,"mtime":1612062066981,"results":"28","hashOfConfig":"17"},{"size":103,"mtime":1612045817624,"results":"29","hashOfConfig":"17"},{"size":3749,"mtime":1612074187325,"results":"30","hashOfConfig":"17"},{"size":73,"mtime":1612060757272,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ib6zu0",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\App.js",["64"],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Navbar.jsx",["65"],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\index.js",[],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\History.jsx",["66","67","68","69","70"],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\Login.jsx",["71","72","73","74","75","76","77"],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\Home.jsx",[],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\pages\\SignUp.jsx",["78","79","80","81","82"],"import React, {useState} from \"react\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport Axios from \"axios\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport \"../styles/login.css\";\r\n\r\nexport default function SignUp() {\r\n\r\n  //states\r\n  const [firstname, setFirstName] = useState();\r\n  const [lastname, setLastName] = useState(); \r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [isValid, setIsValid] = useState();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSignUp = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  //handle form submission\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      //insert new user into the system\r\n      const newUser = {firstname, lastname, email, password, passwordCheck};\r\n      const response = await Axios.post(\r\n        \"http://localhost:5000/api/users/create\",\r\n        newUser\r\n      );\r\n      setIsValid(response.data.isValid);\r\n      setErrors({});\r\n    } catch (err) {\r\n      setIsValid(err.response.data.isValid);\r\n      setErrors(err.response.data.errors);\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <Box component=\"span\" m={1}>\r\n     <Grid container justify = \"center\">\r\n      <FormControl component=\"fieldset\">\r\n          <FormLabel className=\"center fontSize\" component=\"legend\">Sign Up</FormLabel>\r\n          {isValid === true && <div className=\"biggerGreen\">User Registered Successfully</div>}\r\n          {isValid === true && <div className=\"center\"><Button className=\"blueLinkWithMargin\" onClick={handleSignUp}><u>Click Here to Login</u></Button></div>}\r\n          {isValid === false && <div className=\"biggerRed\"><u>Registration failed</u></div>}\r\n          <FormGroup>\r\n            {errors.firstname && <div className=\"redError\">{errors.firstname}</div>}\r\n            <TextField id=\"firstName\" className=\"bottomMargin\" variant=\"outlined\" label=\"First Name\" onChange={(e) => setFirstName(e.target.value)}/>\r\n            {errors.lastname && <div className=\"redError\">{errors.lastname}</div>}\r\n            <TextField id=\"lastName\" className=\"bottomMargin\" label=\"Last Name\" variant=\"outlined\" onChange={(e) => setLastName(e.target.value)}/>\r\n            {errors.email && <div className=\"redError\">{errors.email}</div>}\r\n            <TextField id=\"email\" className=\"bottomMargin\" label=\"Email\" variant=\"outlined\" onChange={(e) => setEmail(e.target.value)}/>\r\n            {errors.password && <div className=\"redError\">{errors.password}</div>}\r\n            <TextField id=\"password\" className=\"bottomMargin\" label=\"Password\" variant=\"outlined\" onChange={(e) => setPassword(e.target.value)}/>\r\n            {errors.passwordCheck && <div className=\"redError\">{errors.passwordCheck}</div>}\r\n            <TextField id=\"confirmPassword\" className=\"bottomMargin\" label=\"Confirm Password\" variant=\"outlined\" onChange={(e) => setPasswordCheck(e.target.value)}/>\r\n          </FormGroup>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"mr-2\"\r\n            onClick={submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {/* Sign up link */}\r\n          <Button\r\n            onClick={handleSignUp}\r\n            className=\"blueLink\"\r\n          >\r\n            Already have an account? Sign In\r\n          </Button>\r\n        \r\n      </FormControl>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\utils\\DrawRect.js",[],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\utils\\index.js",[],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Webcam.jsx",["83","84","85"],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\HabitModal.jsx",["86"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { TimePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nconst CustomContent = styled(DialogContent)({\r\n  overflowY: \"unset\",\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    width: \"25ch\",\r\n  },\r\n  ageField: {\r\n    width: \"10ch\",\r\n  },\r\n  inputWrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"end\",\r\n  },\r\n  formControl: {\r\n    display: \"block\",\r\n    width: \"25ch\",\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 240,\r\n  },\r\n\r\n  time: {\r\n    display: \"block\",\r\n    margin: theme.spacing(2, 0, 1, 0),\r\n    minWidth: 240,\r\n  },\r\n}));\r\n\r\nexport default function FormDialog(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [error, setError] = React.useState({});\r\n\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [trigger, setTrigger] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"\");\r\n  const [duration, setDuration] = React.useState(null);\r\n\r\n  const isValid = habit => {\r\n    let valid = true;\r\n\r\n    const err = {};\r\n\r\n    if (!habit.title) {\r\n      err.title = true;\r\n      valid = false;\r\n    }\r\n    if (!habit.trigger) {\r\n      err.trigger = true;\r\n      valid = false;\r\n    }\r\n\r\n    if (!habit.type) {\r\n      err.type = true;\r\n      valid = false;\r\n    }\r\n\r\n    if (!habit.duration && habit.type !== \"checkbox\") {\r\n      err.duration = true;\r\n      valid = false;\r\n    }\r\n\r\n    console.log(err);\r\n\r\n    setError(err);\r\n\r\n    return valid;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const habit = {\r\n      title,\r\n      trigger,\r\n      type,\r\n      duration,\r\n    };\r\n\r\n    const token =\r\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDE1YzNkODU1ZWViZTEzYTAwMGY1MjIiLCJmaXJzdG5hbWUiOiJQYXVsIiwibGFzdG5hbWUiOiJCYXJhc2EiLCJlbWFpbCI6InBiQGVtYWlsLmNvbSIsImlhdCI6MTYxMjA0NzQxMX0.Rbx8UktbVnmUkfJi0AR3sdoZkbh5s8rZEZ2UezTsIPk\";\r\n    if (isValid(habit)) {\r\n      axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n      axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n      axios.defaults.headers.post[\"Authorization\"] = \"Bearer \" + token;\r\n\r\n      axios\r\n        .post(\"http://localhost:5000/api/routines/addhabit\", {\r\n          id: \"6015c1fadfa1e55a4428fdb6\",\r\n          ...habit,\r\n        })\r\n        .then(res => {\r\n          console.log(res);\r\n\r\n          props.onSave(res.data.habit);\r\n        });\r\n\r\n      setTitle(\"\");\r\n      setTrigger(\"\");\r\n      setType(\"\");\r\n      setDuration(\"\");\r\n      setError({});\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleTypeChange = e => {\r\n    const type = e.target.value;\r\n    type === \"checkbox\" && setDuration(null);\r\n    setType(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"mr-2\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        Create Habit\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add a new habit</DialogTitle>\r\n        <CustomContent>\r\n          <DialogContentText style={{ minWidth: \"300px\" }}>\r\n            Create your new daily habit here\r\n          </DialogContentText>\r\n\r\n          <form noValidate autoComplete=\"off\">\r\n            <TextField\r\n              error={error.title}\r\n              id=\"standard-basic\"\r\n              label=\"Title\"\r\n              margin=\"normal\"\r\n              className={classes.textField}\r\n              value={title}\r\n              onChange={e => setTitle(e.target.value)}\r\n              required\r\n              style={{ marginBottom: \"0\", marginTop: \"0\" }}\r\n            />\r\n\r\n            <FormControl\r\n              className={classes.formControl}\r\n              required\r\n              error={error.trigger}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Trigger Object\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={trigger}\r\n                onChange={(e, newValue) => setTrigger(e.target.value)}\r\n                className={classes.textField}\r\n              >\r\n                <MenuItem value={\"bottle\"}>Bottle</MenuItem>\r\n                <MenuItem value={\"toothbrush\"}>Tooth Brush</MenuItem>\r\n                <MenuItem value={\"book\"}>Book</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              className={classes.formControl}\r\n              required\r\n              error={error.type}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={type}\r\n                onChange={handleTypeChange}\r\n                className={classes.textField}\r\n              >\r\n                <MenuItem value={\"checkbox\"}>Checkbox</MenuItem>\r\n                <MenuItem value={\"timer\"}>Timer</MenuItem>\r\n                <MenuItem value={\"strict_timer\"}>Strict Timer (Beta)</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {(type === \"timer\" || type === \"strict_timer\") && (\r\n              <FormControl className={classes.time}>\r\n                <TimePicker\r\n                  ampm={false}\r\n                  openTo=\"hours\"\r\n                  views={[\"hours\", \"minutes\", \"seconds\"]}\r\n                  format=\"HH:mm:ss\"\r\n                  label=\"Duration\"\r\n                  value={duration}\r\n                  onChange={setDuration}\r\n                  required\r\n                  initialFocusedDate={moment().startOf(\"day\")}\r\n                  error={error.duration}\r\n                />\r\n              </FormControl>\r\n            )}\r\n          </form>\r\n        </CustomContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Checkbox.jsx",["87"],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\StrictTimed.jsx",[],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\components\\Timed.jsx",["88","89","90","91","92","93"],"C:\\Users\\brade\\Documents\\Projects\\habitrack\\src\\contexts\\userContext.js",[],{"ruleId":"94","severity":1,"message":"95","line":8,"column":50,"nodeType":"96","messageId":"97","endLine":8,"endColumn":54},{"ruleId":"94","severity":1,"message":"98","line":49,"column":10,"nodeType":"96","messageId":"97","endLine":49,"endColumn":15},{"ruleId":"94","severity":1,"message":"99","line":47,"column":8,"nodeType":"96","messageId":"97","endLine":47,"endColumn":20},{"ruleId":"94","severity":1,"message":"100","line":47,"column":22,"nodeType":"96","messageId":"97","endLine":47,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":89,"column":20,"nodeType":"103","messageId":"104","endLine":89,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":91,"column":27,"nodeType":"103","messageId":"104","endLine":91,"endColumn":29},{"ruleId":"101","severity":1,"message":"102","line":141,"column":22,"nodeType":"103","messageId":"104","endLine":141,"endColumn":24},{"ruleId":"94","severity":1,"message":"105","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":24},{"ruleId":"94","severity":1,"message":"106","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":14},{"ruleId":"94","severity":1,"message":"107","line":14,"column":27,"nodeType":"96","messageId":"97","endLine":14,"endColumn":33},{"ruleId":"94","severity":1,"message":"108","line":14,"column":35,"nodeType":"96","messageId":"97","endLine":14,"endColumn":41},{"ruleId":"94","severity":1,"message":"109","line":14,"column":43,"nodeType":"96","messageId":"97","endLine":14,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":14,"column":50,"nodeType":"96","messageId":"97","endLine":14,"endColumn":54},{"ruleId":"94","severity":1,"message":"110","line":24,"column":10,"nodeType":"96","messageId":"97","endLine":24,"endColumn":17},{"ruleId":"94","severity":1,"message":"105","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":24},{"ruleId":"94","severity":1,"message":"107","line":12,"column":27,"nodeType":"96","messageId":"97","endLine":12,"endColumn":33},{"ruleId":"94","severity":1,"message":"108","line":12,"column":35,"nodeType":"96","messageId":"97","endLine":12,"endColumn":41},{"ruleId":"94","severity":1,"message":"109","line":12,"column":43,"nodeType":"96","messageId":"97","endLine":12,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":12,"column":50,"nodeType":"96","messageId":"97","endLine":12,"endColumn":54},{"ruleId":"94","severity":1,"message":"111","line":2,"column":25,"nodeType":"96","messageId":"97","endLine":2,"endColumn":33},{"ruleId":"94","severity":1,"message":"112","line":3,"column":13,"nodeType":"96","messageId":"97","endLine":3,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":53,"column":6,"nodeType":"115","endLine":53,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":240,"column":57,"nodeType":"119","endLine":240,"endColumn":79},{"ruleId":"113","severity":1,"message":"120","line":39,"column":6,"nodeType":"115","endLine":39,"endColumn":18,"suggestions":"121"},{"ruleId":"94","severity":1,"message":"122","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":14},{"ruleId":"94","severity":1,"message":"123","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":19},{"ruleId":"94","severity":1,"message":"124","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":18},{"ruleId":"94","severity":1,"message":"105","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":24},{"ruleId":"94","severity":1,"message":"125","line":78,"column":9,"nodeType":"96","messageId":"97","endLine":78,"endColumn":16},{"ruleId":"113","severity":1,"message":"126","line":78,"column":19,"nodeType":"127","endLine":78,"endColumn":31},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'calendarType' is assigned a value but never used.","'setCalendarType' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControlLabel' is defined but never used.","'SignUp' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'isValid' is assigned a value but never used.","'useState' is defined but never used.","'tf' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'runCoco'. Either include it or remove the dependency array.","ArrayExpression",["128"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'checked' and 'habit'. Either include them or remove the dependency array.",["129"],"'Button' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'timerId' is assigned a value but never used.","Assignments to the 'timerId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [runCoco]",{"range":"134","text":"135"},"Update the dependencies array to be: [checked, detections, habit]",{"range":"136","text":"137"},[1429,1431],"[runCoco]",[1514,1526],"[checked, detections, habit]"]